{
  "title": "The Algorithms - Ruby Playground",
  "description": "",
  "tags": [],
  "activeEditor": "script",
  "markup": {
    "language": "html",
    "content": "<h1>\r\n  <a id=\"title-link\" href=\".\"\r\n    >The Algorithms Playground - <span id=\"language\">Ruby</span></a\r\n  >\r\n</h1>\r\n<p class=\"languages\">\r\n  Switch to:\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-javascript/\"\r\n    >JavaScript</a\r\n  >\r\n  -\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-javascript/?lang=ts\"\r\n    >TypeScript</a\r\n  >\r\n  -\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-python/\"\r\n    >Python</a\r\n  >\r\n  -\r\n  <a href=\"https://hatemhosny.github.io/thealgorithms-r/\"\r\n    >R</a\r\n  >\r\n</p>\r\n<p>\r\n  Algorithm:\r\n  <select id=\"algorithm-select\"></select>\r\n</p>\r\n<p>(<a target=\"_blank\" id=\"source-link\">Source</a>)</p>\r\n<div id=\"container\" style=\"height: 80vh\"></div>\r\n\r\n<div id=\"footer\">\r\n  <p>\r\n    This page was built in\r\n    <a href=\"https://livecodes.io/\" target=\"_blank\">LiveCodes</a>\r\n    and\r\n    <a href=\"https://livecodes.io/docs/features/deploy\" target=\"_blank\"\r\n      >deployed</a\r\n    >\r\n    to GitHub Pages.\r\n  </p>\r\n  <p>\r\n    <a\r\n      href=\"https://livecodes.io/?activeEditor=script&x=https://github.com/hatemhosny/thealgorithms-ruby/tree/gh-pages/src\"\r\n      target=\"_blank\"\r\n      >Edit in LiveCodes</a\r\n    >\r\n    -\r\n    <a\r\n      href=\"https://github.com/hatemhosny/thealgorithms-ruby/\"\r\n      target=\"_blank\"\r\n      >View on GitHub</a\r\n    >\r\n  </p>\r\n</div>\r\n\r\n<script>\r\nconst algorithms = [\r\n    \"backtracking/generate_paranthesis\",\r\n    \"bit_manipulation/binary_and_operator\",\r\n    \"bit_manipulation/binary_count_setbits\",\r\n    \"bit_manipulation/binary_count_trailing_zeroes\",\r\n    \"bit_manipulation/binary_or_operator\",\r\n    \"bit_manipulation/binary_xor_operator\",\r\n    \"bit_manipulation/power_of_two\",\r\n    \"bit_manipulation/single_bit_binary_operations\",\r\n    \"ciphers/caesar\",\r\n    \"ciphers/merkle_hellman_cryptosystem\",\r\n    \"ciphers/rsa\",\r\n    \"conversions/temperature_conversions\",\r\n    \"conversions/weight_conversions\",\r\n    \"data_structures/arrays/3sum\",\r\n    \"data_structures/arrays/add_digits\",\r\n    \"data_structures/arrays/find_all_duplicates_in_an_array\",\r\n    \"data_structures/arrays/find_the_highest_altitude\",\r\n    \"data_structures/arrays/fizz_buzz\",\r\n    \"data_structures/arrays/get_products_of_all_other_elements\",\r\n    \"data_structures/arrays/good_pairs\",\r\n    \"data_structures/arrays/intersection\",\r\n    \"data_structures/arrays/max_69_number\",\r\n    \"data_structures/arrays/maximum_product_subarray\",\r\n    \"data_structures/arrays/maximum_subarray\",\r\n    \"data_structures/arrays/next_greater_element\",\r\n    \"data_structures/arrays/remove_elements\",\r\n    \"data_structures/arrays/richest_customer_wealth\",\r\n    \"data_structures/arrays/shortest_word_distance\",\r\n    \"data_structures/arrays/shuffle_array\",\r\n    \"data_structures/arrays/single_number\",\r\n    \"data_structures/arrays/sort_squares_of_an_array\",\r\n    \"data_structures/arrays/sorted_arrays_intersection\",\r\n    \"data_structures/arrays/sudoku\",\r\n    \"data_structures/arrays/two_sum\",\r\n    \"data_structures/arrays/two_sum_ii\",\r\n    \"data_structures/arrays/strings/almost_palindrome_checker\",\r\n    \"data_structures/arrays/strings/anagram_checker\",\r\n    \"data_structures/arrays/strings/jewels_and_stones\",\r\n    \"data_structures/arrays/strings/palindrome\",\r\n    \"data_structures/arrays/strings/remove_vowels\",\r\n    \"data_structures/binary_trees/avl_tree\",\r\n    \"data_structures/binary_trees/bst\",\r\n    \"data_structures/binary_trees/inorder_traversal\",\r\n    \"data_structures/binary_trees/invert\",\r\n    \"data_structures/binary_trees/postorder_traversal\",\r\n    \"data_structures/binary_trees/preorder_traversal\",\r\n    \"data_structures/disjoint_sets/disjoint_sets\",\r\n    \"data_structures/graphs/bfs\",\r\n    \"data_structures/graphs/topological_sort\",\r\n    \"data_structures/graphs/unweighted_graph\",\r\n    \"data_structures/graphs/weighted_graph\",\r\n    \"data_structures/hash_table/anagram_checker\",\r\n    \"data_structures/hash_table/arrays_intersection\",\r\n    \"data_structures/hash_table/common_characters\",\r\n    \"data_structures/hash_table/find_all_duplicates_in_an_array\",\r\n    \"data_structures/hash_table/fizz_buzz\",\r\n    \"data_structures/hash_table/good_pairs\",\r\n    \"data_structures/hash_table/isomorphic_strings\",\r\n    \"data_structures/hash_table/richest_customer_wealth\",\r\n    \"data_structures/hash_table/two_sum\",\r\n    \"data_structures/hash_table/uncommon_words\",\r\n    \"data_structures/heaps/max_heap\",\r\n    \"data_structures/linked_lists/circular_linked_list\",\r\n    \"data_structures/linked_lists/doubly_linked_list\",\r\n    \"data_structures/linked_lists/singly_linked_list\",\r\n    \"data_structures/queues/circular_queue\",\r\n    \"data_structures/queues/queue\",\r\n    \"data_structures/stacks/stack\",\r\n    \"data_structures/tries/trie\",\r\n    \"discrete_mathematics/euclidean_gcd\",\r\n    \"discrete_mathematics/exteded_euclidean_algorithm\",\r\n    \"discrete_mathematics/lcm\",\r\n    \"dynamic_programming/climbing_stairs\",\r\n    \"dynamic_programming/coin_change\",\r\n    \"dynamic_programming/count_sorted_vowel_strings\",\r\n    \"dynamic_programming/editdistance\",\r\n    \"dynamic_programming/fibonacci\",\r\n    \"dynamic_programming/house_robber\",\r\n    \"dynamic_programming/knapsack\",\r\n    \"dynamic_programming/ones_and_zeros\",\r\n    \"dynamic_programming/pascal_triangle_ii\",\r\n    \"electronics/ohms_law\",\r\n    \"maths/3nPlus1\",\r\n    \"maths/abs\",\r\n    \"maths/abs_max\",\r\n    \"maths/abs_min\",\r\n    \"maths/add\",\r\n    \"maths/add_digits\",\r\n    \"maths/aliquot_sum\",\r\n    \"maths/armstrong_number\",\r\n    \"maths/average_mean\",\r\n    \"maths/average_median\",\r\n    \"maths/binary_to_decimal\",\r\n    \"maths/ceil\",\r\n    \"maths/count_sorted_vowel_strings\",\r\n    \"maths/decimal_to_binary\",\r\n    \"maths/factorial\",\r\n    \"maths/factorial_non_recursive_non_iterative\",\r\n    \"maths/fibonacci\",\r\n    \"maths/find_max\",\r\n    \"maths/find_min\",\r\n    \"maths/lucas_series\",\r\n    \"maths/number_of_digits\",\r\n    \"maths/pascal_triangle_ii\",\r\n    \"maths/power_of_two\",\r\n    \"maths/prime_number\",\r\n    \"maths/roman_to_integer\",\r\n    \"maths/square_root\",\r\n    \"maths/sum_of_digits\",\r\n    \"other/fisher_yates\",\r\n    \"other/number_of_days\",\r\n    \"project_euler/README.md\",\r\n    \"project_euler/problem_001/sol1\",\r\n    \"project_euler/problem_002/sol1\",\r\n    \"project_euler/problem_003/sol1\",\r\n    \"project_euler/problem_003/sol2\",\r\n    \"project_euler/problem_004/sol1\",\r\n    \"project_euler/problem_004/sol2\",\r\n    \"project_euler/problem_005/sol1\",\r\n    \"project_euler/problem_006/sol1\",\r\n    \"project_euler/problem_007/sol1\",\r\n    \"project_euler/problem_010/sol1\",\r\n    \"project_euler/problem_014/sol1\",\r\n    \"project_euler/problem_020/sol1\",\r\n    \"project_euler/problem_021/sol1\",\r\n    \"project_euler/problem_022/p022_names.txt\",\r\n    \"project_euler/problem_022/sol1\",\r\n    \"project_euler/problem_025/sol1\",\r\n    \"searches/binary_search\",\r\n    \"searches/depth_first_search\",\r\n    \"searches/double_linear_search\",\r\n    \"searches/fibonacci_search\",\r\n    \"searches/jump_search\",\r\n    \"searches/linear_search\",\r\n    \"searches/number_of_islands\",\r\n    \"searches/recursive_double_linear_search\",\r\n    \"searches/recursive_linear_search\",\r\n    \"searches/ternary_search\",\r\n    \"sorting/bead_sort\",\r\n    \"sorting/binary_insertion_sort\",\r\n    \"sorting/bogo_sort\",\r\n    \"sorting/bubble_sort\",\r\n    \"sorting/bucket_sort\",\r\n    \"sorting/cocktail_sort\",\r\n    \"sorting/comb_sort\",\r\n    \"sorting/counting_sort\",\r\n    \"sorting/gnome_sort\",\r\n    \"sorting/heap_sort\",\r\n    \"sorting/insertion_sort\",\r\n    \"sorting/merge_sort\",\r\n    \"sorting/pancake_sort\",\r\n    \"sorting/quicksort\",\r\n    \"sorting/radix_sort\",\r\n    \"sorting/selection_sort\",\r\n    \"sorting/shell_sort\",\r\n    \"sorting/sort_color\",\r\n    \"sorting/sort_tests\",\r\n    \"strings/boyer_moore_horspool_search\",\r\n    \"strings/max_k_most_frequent_words\",\r\n];\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  window.lang = {\r\n    name: \"ruby\",\r\n    title: \"Ruby\",\r\n    ext: \"rb\",\r\n    repo: \"https://github.com/TheAlgorithms/Ruby\",\r\n    algorithms,\r\n    defaultAlgorithm: \"maths/fibonacci\",\r\n  };\r\n\r\n  window.algorithmSelect = document.getElementById(\"algorithm-select\");\r\n  document.getElementById(\"source-link\").href = window.lang.repo;\r\n  document.getElementById(\"language\").innerText = window.lang.title;\r\n\r\n  algorithms.forEach((algorithm) => {\r\n    const option = document.createElement(\"option\");\r\n    option.value = algorithm;\r\n    option.innerText = algorithm;\r\n    option.id = algorithm;\r\n    algorithmSelect.appendChild(option);\r\n  });\r\n\r\n  const selected =\r\n    (params.get(\"algorithm\") &&\r\n      algorithms.find((algorithm) => algorithm === params.get(\"algorithm\"))) ||\r\n    window.lang.defaultAlgorithm;\r\n  document.getElementById(selected).selected = true;\r\n</script>\r\n"
  },
  "style": {
    "language": "css",
    "content": "body {\r\n  font-family: sans-serif;\r\n  text-align: center;\r\n}\r\nh1 {\r\n  font-size: 1.5em;\r\n  text-align: left;\r\n  margin-left: 1rem;\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: royalblue;\r\n}\r\nh1 a {\r\n  color: unset;\r\n}\r\nh1 a:hover {\r\n  text-decoration: underline;\r\n}\r\n.languages {\r\n  text-align: left;\r\n  margin-left: 1rem;\r\n}\r\n#container {\r\n  height: 90vh;\r\n}\r\n#footer {\r\n  font-size: 0.8em;\r\n}"
  },
  "script": {
    "language": "javascript",
    "content": "import { createPlayground } from \"https://unpkg.com/livecodes@0.2.0/livecodes.js\";\r\n\r\nlet playground;\r\n\r\nconst getContent = async (url) => {\r\n  const pathname = new URL(url).pathname.slice(1);\r\n  const [user, repo, _type, branch, ...path] = pathname.split(\"/\");\r\n  const [name, _extension] = path[path.length - 1].split(\".\");\r\n  const scriptUrl = `https://raw.githubusercontent.com/${user}/${repo}/${branch}/${path.join(\r\n    \"/\",\r\n  )}`;\r\n  const script = await fetch(scriptUrl).then(async (res) =>\r\n    (await res.text()).replace(\r\n      \"if $0 == __FILE__\",\r\n      \"$0 = __FILE__\\nif $0 == __FILE__\",\r\n    ),\r\n  );\r\n  return { script, name };\r\n};\r\n\r\nconst loadAlgorithm = async () => {\r\n  const algorithm = window.algorithmSelect.value;\r\n  const algorithmUrl = `${window.lang.repo}/blob/master/${algorithm}.${window.lang.ext}`;\r\n  if (playground) {\r\n    history.pushState(\r\n      {},\r\n      \"\",\r\n      `${location.origin}${location.pathname}?algorithm=${algorithm}`,\r\n    );\r\n  }\r\n  const { script, name } = await getContent(algorithmUrl);\r\n\r\n  const config = {\r\n    title: name,\r\n    languages: [window.lang.name],\r\n    script: {\r\n      language: window.lang.name,\r\n      content: script,\r\n    },\r\n    tools: {\r\n      enabled: [\"console\"],\r\n      active: \"console\",\r\n      status: \"full\",\r\n    },\r\n  };\r\n\r\n  if (!playground) {\r\n    playground = await createPlayground(\"#container\", {\r\n      appUrl: \"https://dev.livecodes.io/\",\r\n      config,\r\n    });\r\n  } else {\r\n    playground.setConfig(config);\r\n  }\r\n};\r\n\r\nwindow.algorithmSelect.addEventListener(\"change\", loadAlgorithm);\r\nloadAlgorithm();\r\n"
  },
  "stylesheets": [],
  "scripts": [],
  "cssPreset": "",
  "processors": [],
  "customSettings": {},
  "imports": {},
  "types": {},
  "tests": {
    "language": "typescript",
    "content": ""
  },
  "version": "15"
}